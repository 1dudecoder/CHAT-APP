{"ast":null,"code":"var _jsxFileName = \"D:\\\\my react project\\\\pp\\\\ChatAPP\\\\src\\\\Components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { AiFillFire } from \"react-icons/ai\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { db } from \"../Firebase/Firebase\";\nimport { useParams } from \"react-router-dom\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Anchorme } from \"react-anchorme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    position: \"relative\",\n    padding: \"8px\"\n  },\n  paper: {\n    padding: \"10px\",\n    \"&:hover\": {\n      backgroundColor: \"#1f2436\"\n    }\n  },\n  avatar: {\n    display: \"inline-block\",\n    verticalAlign: \"top\"\n  },\n  chat: {\n    display: \"inline-block\",\n    paddingLeft: \"1rem\",\n    width: \"calc(100% - 50px)\"\n  },\n  chatHeading: {\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    display: \"inline-block\",\n    fontSize: \"1rem\",\n    fontWeight: \"600\",\n    color: \"white\"\n  },\n  chatTimming: {\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    display: \"inline-block\",\n    paddingLeft: \"0.5em\",\n    color: \"white\"\n  },\n  chatText: {\n    color: \"#dcddde\"\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: \"#3f51b5\"\n  },\n  emojiDiv: {\n    position: \"absolute\",\n    right: 0,\n    top: 0\n  },\n  emojiDivInner: {\n    position: \"absolute\",\n    right: 0,\n    padding: \"0 35px 0 32px\"\n  },\n  emojiBtn: {\n    fontSize: \"1.1rem\",\n    color: \"rgb(255 195 54)\"\n  },\n  allEmoji: {\n    backgroundColor: \"#2d2e31ba\",\n    borderRadius: \"5px\",\n    paddingLeft: \"2px\",\n    paddingRight: \"2px\",\n    display: \"flex\"\n  },\n  countEmojiBtn: {\n    padding: \"3px\",\n    borderRadius: \"4px\",\n    fontSize: \"0.8em\",\n    backgroundColor: \"#ffffff4a\",\n    color: \"#cacaca\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"#ffffff4a\",\n      color: \"#e7e7e7\"\n    }\n  }\n}));\n\nfunction Messages({\n  values,\n  msgId\n}) {\n  _s();\n\n  const [style, setStyle] = useState({\n    display: \"none\"\n  });\n  const [deleteModal, setDeleteModal] = useState(false);\n  const classes = useStyles();\n  const uid = JSON.parse(localStorage.getItem(\"userDetails\")).uid;\n  const messegerUid = values.uid;\n  const date = values.timestamp.toDate();\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const time = `${day}/${month}/${year}   ${hour}:${minute}`;\n  const numLikes = values.likeCount;\n  const numFire = values.fireCount;\n  const numHeart = values.heartCount;\n  const userLiked = values.likes[uid];\n  const userFire = values.fire[uid];\n  const userHeart = values.heart[uid];\n  const postImg = values.postImg;\n  const channelId = useParams().id;\n  const selectedLike = userLiked ? {\n    color: \"#8ff879\",\n    backgroundColor: \"#545454\"\n  } : null;\n  const selectedHeart = userHeart ? {\n    color: \"#ff527d\",\n    backgroundColor: \"#545454\"\n  } : null;\n  const selectedFire = userFire ? {\n    color: \"#ffc336\",\n    backgroundColor: \"#545454\"\n  } : null;\n\n  const showDeleteModal = () => {\n    setDeleteModal(!deleteModal);\n  };\n\n  const heartClick = () => {\n    const messageDoc = db.collection(\"channels\").doc(channelId).collection(\"messages\").doc(msgId);\n\n    if (userHeart) {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newHeartCount = doc.data().heartCount - 1;\n          let newHeart = doc.data().heart ? doc.data().heart : {};\n          newHeart[uid] = false;\n          transaction.update(messageDoc, {\n            heartCount: newHeartCount,\n            heart: newHeart\n          });\n        });\n      }).then(() => {\n        console.log(\"Disiked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newHeartCount = doc.data().heartCount + 1;\n          let newHeart = doc.data().heart ? doc.data().heart : {};\n          newHeart[uid] = true;\n          transaction.update(messageDoc, {\n            heartCount: newHeartCount,\n            heart: newHeart\n          });\n        });\n      }).then(() => {\n        console.log(\"Liked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const fireClick = () => {\n    const messageDoc = db.collection(\"channels\").doc(channelId).collection(\"messages\").doc(msgId);\n\n    if (userFire) {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newFireCount = doc.data().fireCount - 1;\n          let newFire = doc.data().fire ? doc.data().fire : {};\n          newFire[uid] = false;\n          transaction.update(messageDoc, {\n            fireCount: newFireCount,\n            fire: newFire\n          });\n        });\n      }).then(() => {\n        console.log(\"Disiked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newFireCount = doc.data().fireCount + 1;\n          let newFire = doc.data().fire ? doc.data().fire : {};\n          newFire[uid] = true;\n          transaction.update(messageDoc, {\n            fireCount: newFireCount,\n            fire: newFire\n          });\n        });\n      }).then(() => {\n        console.log(\"Liked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const likeClick = () => {\n    const messageDoc = db.collection(\"channels\").doc(channelId).collection(\"messages\").doc(msgId);\n\n    if (userLiked) {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newLikeCount = doc.data().likeCount - 1;\n          let newLikes = doc.data().likes ? doc.data().likes : {};\n          newLikes[uid] = false;\n          transaction.update(messageDoc, {\n            likeCount: newLikeCount,\n            likes: newLikes\n          });\n        });\n      }).then(() => {\n        console.log(\"Disiked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      return db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(messageDoc).then(doc => {\n          if (!doc) {\n            console.log(\"doc not found\");\n            return;\n          }\n\n          let newLikeCount = doc.data().likeCount + 1;\n          let newLikes = doc.data().likes ? doc.data().likes : {};\n          newLikes[uid] = true;\n          transaction.update(messageDoc, {\n            likeCount: newLikeCount,\n            likes: newLikes\n          });\n        });\n      }).then(() => {\n        console.log(\"Liked\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const deleteMsg = id => {\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").doc(id).delete().then(res => {\n      console.log(\"deleted successfully\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.root,\n    children: [deleteModal ? /*#__PURE__*/_jsxDEV(DeleteModal, {\n      msgId: msgId,\n      text: values.text,\n      postImg: postImg,\n      deleteMsg: deleteMsg,\n      handleModal: showDeleteModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      onMouseEnter: e => {\n        setStyle({\n          display: \"block\"\n        });\n      },\n      onMouseLeave: e => {\n        setStyle({\n          display: \"none\"\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: values.userName,\n          src: values.userImg,\n          className: classes.purple\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chat,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: classes.chatHeading,\n            children: values.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.chatTimming,\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatText,\n          children: values.text.split(\"\\n\").map((txt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Anchorme, {\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: txt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          style: {\n            paddingTop: \"5px\"\n          },\n          children: postImg ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: postImg,\n            alt: \"user\",\n            style: {\n              height: \"30vh\",\n              width: \"auto\",\n              borderRadius: \"4px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"5px\",\n            display: \"flex\"\n          },\n          children: [numLikes > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"3px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              onClick: likeClick,\n              className: classes.countEmojiBtn,\n              style: selectedLike,\n              children: [/*#__PURE__*/_jsxDEV(AiFillLike, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  paddingLeft: \"2px\"\n                },\n                children: numLikes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this) : null, numFire > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"3px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              onClick: fireClick,\n              className: classes.countEmojiBtn,\n              style: selectedFire,\n              children: [/*#__PURE__*/_jsxDEV(AiFillFire, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  paddingLeft: \"2px\"\n                },\n                children: numFire\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this) : null, numHeart > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"3px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              onClick: heartClick,\n              className: classes.countEmojiBtn,\n              style: selectedHeart,\n              children: [/*#__PURE__*/_jsxDEV(AiFillHeart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  paddingLeft: \"2px\"\n                },\n                children: numHeart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.emojiDiv,\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.emojiDivInner,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.allEmoji,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              style: {\n                padding: \"4px\"\n              },\n              onClick: likeClick,\n              children: /*#__PURE__*/_jsxDEV(AiFillLike, {\n                className: classes.emojiBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              style: {\n                padding: \"4px\"\n              },\n              onClick: fireClick,\n              children: /*#__PURE__*/_jsxDEV(AiFillFire, {\n                className: classes.emojiBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              style: {\n                padding: \"4px\"\n              },\n              onClick: heartClick,\n              children: /*#__PURE__*/_jsxDEV(AiFillHeart, {\n                className: classes.emojiBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), uid === messegerUid ? /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"span\",\n              style: {\n                padding: \"4px\"\n              },\n              onClick: showDeleteModal,\n              children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                className: classes.emojiBtn,\n                color: \"#c3c3c3f0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"p7gWhGvzm0YkFzZ0OECjUtlNpOs=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["D:/my react project/pp/ChatAPP/src/Components/Messages.js"],"names":["React","useState","Grid","makeStyles","Avatar","deepPurple","IconButton","AiFillLike","AiFillFire","AiFillHeart","AiFillDelete","db","useParams","DeleteModal","Anchorme","useStyles","theme","root","flexGrow","position","padding","paper","backgroundColor","avatar","display","verticalAlign","chat","paddingLeft","width","chatHeading","marginBlockStart","marginBlockEnd","fontSize","fontWeight","color","chatTimming","chatText","purple","palette","getContrastText","emojiDiv","right","top","emojiDivInner","emojiBtn","allEmoji","borderRadius","paddingRight","countEmojiBtn","Messages","values","msgId","style","setStyle","deleteModal","setDeleteModal","classes","uid","JSON","parse","localStorage","getItem","messegerUid","date","timestamp","toDate","day","getDate","year","getFullYear","month","getMonth","hour","getHours","minute","getMinutes","time","numLikes","likeCount","numFire","fireCount","numHeart","heartCount","userLiked","likes","userFire","fire","userHeart","heart","postImg","channelId","id","selectedLike","selectedHeart","selectedFire","showDeleteModal","heartClick","messageDoc","collection","doc","runTransaction","transaction","get","then","console","log","newHeartCount","data","newHeart","update","catch","error","fireClick","newFireCount","newFire","likeClick","newLikeCount","newLikes","deleteMsg","delete","res","err","text","e","userName","userImg","split","map","txt","idx","paddingTop","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { AiFillFire } from \"react-icons/ai\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { db } from \"../Firebase/Firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport { Anchorme } from \"react-anchorme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"relative\",\r\n    padding: \"8px\",\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#1f2436\",\r\n    },\r\n  },\r\n  avatar: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"top\",\r\n  },\r\n  chat: {\r\n    display: \"inline-block\",\r\n    paddingLeft: \"1rem\",\r\n    width: \"calc(100% - 50px)\",\r\n  },\r\n  chatHeading: {\r\n    marginBlockStart: 0,\r\n    marginBlockEnd: 0,\r\n    display: \"inline-block\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"600\",\r\n    color: \"white\",\r\n  },\r\n  chatTimming: {\r\n    marginBlockStart: 0,\r\n    marginBlockEnd: 0,\r\n    display: \"inline-block\",\r\n    paddingLeft: \"0.5em\",\r\n    color: \"white\",\r\n  },\r\n  chatText: {\r\n    color: \"#dcddde\",\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: \"#3f51b5\",\r\n  },\r\n  emojiDiv: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n  },\r\n  emojiDivInner: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    padding: \"0 35px 0 32px\",\r\n  },\r\n  emojiBtn: {\r\n    fontSize: \"1.1rem\",\r\n    color: \"rgb(255 195 54)\",\r\n  },\r\n  allEmoji: {\r\n    backgroundColor: \"#2d2e31ba\",\r\n    borderRadius: \"5px\",\r\n    paddingLeft: \"2px\",\r\n    paddingRight: \"2px\",\r\n    display: \"flex\",\r\n  },\r\n  countEmojiBtn: {\r\n    padding: \"3px\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"0.8em\",\r\n    backgroundColor: \"#ffffff4a\",\r\n    color: \"#cacaca\",\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ffffff4a\",\r\n      color: \"#e7e7e7\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Messages({ values, msgId }) {\r\n  const [style, setStyle] = useState({ display: \"none\" });\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const uid = JSON.parse(localStorage.getItem(\"userDetails\")).uid;\r\n  const messegerUid = values.uid;\r\n  const date = values.timestamp.toDate();\r\n  const day = date.getDate();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const time = `${day}/${month}/${year}   ${hour}:${minute}`;\r\n\r\n  const numLikes = values.likeCount;\r\n  const numFire = values.fireCount;\r\n  const numHeart = values.heartCount;\r\n\r\n  const userLiked = values.likes[uid];\r\n  const userFire = values.fire[uid];\r\n  const userHeart = values.heart[uid];\r\n\r\n  const postImg = values.postImg;\r\n\r\n  const channelId = useParams().id;\r\n\r\n  const selectedLike = userLiked\r\n    ? { color: \"#8ff879\", backgroundColor: \"#545454\" }\r\n    : null;\r\n\r\n  const selectedHeart = userHeart\r\n    ? { color: \"#ff527d\", backgroundColor: \"#545454\" }\r\n    : null;\r\n\r\n  const selectedFire = userFire\r\n    ? { color: \"#ffc336\", backgroundColor: \"#545454\" }\r\n    : null;\r\n\r\n  const showDeleteModal = () => {\r\n    setDeleteModal(!deleteModal);\r\n  };\r\n\r\n  const heartClick = () => {\r\n    const messageDoc = db\r\n      .collection(\"channels\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .doc(msgId);\r\n    if (userHeart) {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newHeartCount = doc.data().heartCount - 1;\r\n            let newHeart = doc.data().heart ? doc.data().heart : {};\r\n            newHeart[uid] = false;\r\n\r\n            transaction.update(messageDoc, {\r\n              heartCount: newHeartCount,\r\n              heart: newHeart,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Disiked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newHeartCount = doc.data().heartCount + 1;\r\n            let newHeart = doc.data().heart ? doc.data().heart : {};\r\n            newHeart[uid] = true;\r\n\r\n            transaction.update(messageDoc, {\r\n              heartCount: newHeartCount,\r\n              heart: newHeart,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Liked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const fireClick = () => {\r\n    const messageDoc = db\r\n      .collection(\"channels\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .doc(msgId);\r\n    if (userFire) {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newFireCount = doc.data().fireCount - 1;\r\n            let newFire = doc.data().fire ? doc.data().fire : {};\r\n            newFire[uid] = false;\r\n\r\n            transaction.update(messageDoc, {\r\n              fireCount: newFireCount,\r\n              fire: newFire,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Disiked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newFireCount = doc.data().fireCount + 1;\r\n            let newFire = doc.data().fire ? doc.data().fire : {};\r\n            newFire[uid] = true;\r\n\r\n            transaction.update(messageDoc, {\r\n              fireCount: newFireCount,\r\n              fire: newFire,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Liked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const likeClick = () => {\r\n    const messageDoc = db\r\n      .collection(\"channels\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .doc(msgId);\r\n    if (userLiked) {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newLikeCount = doc.data().likeCount - 1;\r\n            let newLikes = doc.data().likes ? doc.data().likes : {};\r\n            newLikes[uid] = false;\r\n\r\n            transaction.update(messageDoc, {\r\n              likeCount: newLikeCount,\r\n              likes: newLikes,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Disiked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      return db\r\n        .runTransaction((transaction) => {\r\n          // This code may get re-run multiple times if there are conflicts.\r\n          return transaction.get(messageDoc).then((doc) => {\r\n            if (!doc) {\r\n              console.log(\"doc not found\");\r\n              return;\r\n            }\r\n\r\n            let newLikeCount = doc.data().likeCount + 1;\r\n            let newLikes = doc.data().likes ? doc.data().likes : {};\r\n            newLikes[uid] = true;\r\n\r\n            transaction.update(messageDoc, {\r\n              likeCount: newLikeCount,\r\n              likes: newLikes,\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"Liked\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteMsg = (id) => {\r\n    db.collection(\"channels\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .doc(id)\r\n      .delete()\r\n      .then((res) => {\r\n        console.log(\"deleted successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.root}>\r\n      {deleteModal ? (\r\n        <DeleteModal\r\n          msgId={msgId}\r\n          text={values.text}\r\n          postImg={postImg}\r\n          deleteMsg={deleteMsg}\r\n          handleModal={showDeleteModal}\r\n        />\r\n      ) : null}\r\n      <div\r\n        className={classes.paper}\r\n        onMouseEnter={(e) => {\r\n          setStyle({ display: \"block\" });\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          setStyle({ display: \"none\" });\r\n        }}\r\n      >\r\n        <div className={classes.avatar}>\r\n          <Avatar\r\n            alt={values.userName}\r\n            src={values.userImg}\r\n            className={classes.purple}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.chat}>\r\n          <div>\r\n            <h6 className={classes.chatHeading}>{values.userName}</h6>\r\n            <p className={classes.chatTimming}>{time}</p>\r\n          </div>\r\n\r\n          <div className={classes.chatText}>\r\n            {values.text.split(\"\\n\").map((txt, idx) => (\r\n              <div key={idx}>\r\n                <Anchorme target=\"_blank\" rel=\"noreferrer noopener\">\r\n                  {txt}\r\n                </Anchorme>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <Grid item xs={12} md={12} style={{ paddingTop: \"5px\" }}>\r\n            {postImg ? (\r\n              <img\r\n                src={postImg}\r\n                alt=\"user\"\r\n                style={{ height: \"30vh\", width: \"auto\", borderRadius: \"4px\" }}\r\n              />\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <div style={{ paddingTop: \"5px\", display: \"flex\" }}>\r\n            {numLikes > 0 ? (\r\n              <div style={{ padding: \"3px\" }}>\r\n                <IconButton\r\n                  component=\"span\"\r\n                  onClick={likeClick}\r\n                  className={classes.countEmojiBtn}\r\n                  style={selectedLike}\r\n                >\r\n                  <AiFillLike />\r\n                  <div style={{ paddingLeft: \"2px\" }}>{numLikes}</div>\r\n                </IconButton>\r\n              </div>\r\n            ) : null}\r\n\r\n            {numFire > 0 ? (\r\n              <div style={{ padding: \"3px\" }}>\r\n                <IconButton\r\n                  component=\"span\"\r\n                  onClick={fireClick}\r\n                  className={classes.countEmojiBtn}\r\n                  style={selectedFire}\r\n                >\r\n                  <AiFillFire />\r\n                  <div style={{ paddingLeft: \"2px\" }}>{numFire}</div>\r\n                </IconButton>\r\n              </div>\r\n            ) : null}\r\n\r\n            {numHeart > 0 ? (\r\n              <div style={{ padding: \"3px\" }}>\r\n                <IconButton\r\n                  component=\"span\"\r\n                  onClick={heartClick}\r\n                  className={classes.countEmojiBtn}\r\n                  style={selectedHeart}\r\n                >\r\n                  <AiFillHeart />\r\n                  <div style={{ paddingLeft: \"2px\" }}>{numHeart}</div>\r\n                </IconButton>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.emojiDiv} style={style}>\r\n          <div className={classes.emojiDivInner}>\r\n            <div className={classes.allEmoji}>\r\n              <IconButton\r\n                component=\"span\"\r\n                style={{ padding: \"4px\" }}\r\n                onClick={likeClick}\r\n              >\r\n                <AiFillLike className={classes.emojiBtn} />\r\n              </IconButton>\r\n              <IconButton\r\n                component=\"span\"\r\n                style={{ padding: \"4px\" }}\r\n                onClick={fireClick}\r\n              >\r\n                <AiFillFire className={classes.emojiBtn} />\r\n              </IconButton>\r\n              <IconButton\r\n                component=\"span\"\r\n                style={{ padding: \"4px\" }}\r\n                onClick={heartClick}\r\n              >\r\n                <AiFillHeart className={classes.emojiBtn} />\r\n              </IconButton>\r\n              {uid === messegerUid ? (\r\n                <IconButton\r\n                  component=\"span\"\r\n                  style={{ padding: \"4px\" }}\r\n                  onClick={showDeleteModal}\r\n                >\r\n                  <AiFillDelete\r\n                    className={classes.emojiBtn}\r\n                    color=\"#c3c3c3f0\"\r\n                  />\r\n                </IconButton>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}