{"ast":null,"code":"var _jsxFileName = \"D:\\\\my react project\\\\pp\\\\Chatify\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"../Firebase/Firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: \"50px\",\n    paddingBottom: \"25px\",\n    color: \"#f0f0f0\"\n  },\n  heading: {\n    fontSize: \"2.2em\",\n    fontWeight: \"700\"\n  },\n  subHeading: {\n    fontSize: \"1.6em\"\n  },\n  channelDiv: {\n    padding: \"15px\"\n  },\n  channelContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    alignItems: \"center\"\n  },\n  square: {\n    height: \"80px\",\n    width: \"80px\",\n    backgroundColor: \"#8fabbd66\",\n    fontSize: \"2rem\"\n  },\n  rootChannel: {\n    height: \"calc(100vh - 185px)\",\n    position: \"relative\",\n    padding: \"15px\",\n    overflowY: \"scroll\"\n  },\n  channelText: {\n    paddingTop: \"10px\",\n    fontSize: \"1.2rem\"\n  },\n  channelCard: {\n    backgroundColor: \"#1e2439\",\n    boxShadow: \"0px 3px 4px -1px rgb(0 0 0 / 17%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\n    color: \"rgb(220, 221, 222)\"\n  }\n}));\n\nfunction Home() {\n  _s();\n\n  const classes = useStyles();\n  const [channels, setChannels] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    db.collection(\"channels\").orderBy(\"channelName\", \"asc\").onSnapshot(snapshot => {\n      setChannels(snapshot.docs.map(channel => ({\n        channelName: channel.data().channelName,\n        id: channel.id\n      })));\n    });\n  }, []);\n\n  const goToChannel = id => {\n    history.push(`/channel/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgb(34 39 59)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          className: classes.heading,\n          children: \"Welcome to Chatify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          className: classes.subHeading,\n          children: \"Effortless live chat to hangout with friends!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.rootChannel,\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 3,\n        className: classes.channelDiv,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.channelCard,\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            style: {\n              display: \"flex\"\n            },\n            onClick: () => goToChannel(channel.id),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.channelContent,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                variant: \"square\",\n                className: classes.square,\n                style: {\n                  backgroundColor: \"#6a9ec066\"\n                },\n                children: channel.channelName.substr(0, 1).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.channelText,\n                children: channel.channelName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, channel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"fOf0Uc4P8noAxs0JkJxhoAi2Z/Q=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/my react project/pp/Chatify/src/Components/Home.js"],"names":["React","useState","useEffect","makeStyles","Grid","Typography","Card","CardActionArea","CardContent","Avatar","db","useHistory","useStyles","theme","root","paddingTop","paddingBottom","color","heading","fontSize","fontWeight","subHeading","channelDiv","padding","channelContent","display","flexDirection","textAlign","alignItems","square","height","width","backgroundColor","rootChannel","position","overflowY","channelText","channelCard","boxShadow","Home","classes","channels","setChannels","history","collection","orderBy","onSnapshot","snapshot","docs","map","channel","channelName","data","id","goToChannel","push","substr","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from \"../Firebase/Firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"50px\",\r\n    paddingBottom: \"25px\",\r\n    color: \"#f0f0f0\",\r\n  },\r\n  heading: {\r\n    fontSize: \"2.2em\",\r\n    fontWeight: \"700\",\r\n  },\r\n  subHeading: {\r\n    fontSize: \"1.6em\",\r\n  },\r\n  channelDiv: {\r\n    padding: \"15px\",\r\n  },\r\n  channelContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    alignItems: \"center\",\r\n  },\r\n  square: {\r\n    height: \"80px\",\r\n    width: \"80px\",\r\n    backgroundColor: \"#8fabbd66\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  rootChannel: {\r\n    height: \"calc(100vh - 185px)\",\r\n    position: \"relative\",\r\n    padding: \"15px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  channelText: {\r\n    paddingTop: \"10px\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  channelCard: {\r\n    backgroundColor: \"#1e2439\",\r\n    boxShadow:\r\n      \"0px 3px 4px -1px rgb(0 0 0 / 17%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n    color: \"rgb(220, 221, 222)\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const [channels, setChannels] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"channels\")\r\n      .orderBy(\"channelName\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setChannels(\r\n          snapshot.docs.map((channel) => ({\r\n            channelName: channel.data().channelName,\r\n            id: channel.id,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const goToChannel = (id) => {\r\n    history.push(`/channel/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"rgb(34 39 59)\" }}>\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n          <Typography component=\"h1\" className={classes.heading}>\r\n            Welcome to Chatify\r\n          </Typography>\r\n          <Typography component=\"h1\" className={classes.subHeading}>\r\n            Effortless live chat to hangout with friends!\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.rootChannel}>\r\n        {channels.map((channel) => (\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            md={3}\r\n            className={classes.channelDiv}\r\n            key={channel.id}\r\n          >\r\n            <Card className={classes.channelCard}>\r\n              <CardActionArea\r\n                style={{ display: \"flex\" }}\r\n                onClick={() => goToChannel(channel.id)}\r\n              >\r\n                <CardContent className={classes.channelContent}>\r\n                  <Avatar\r\n                    variant=\"square\"\r\n                    className={classes.square}\r\n                    style={{ backgroundColor: \"#6a9ec066\" }}\r\n                  >\r\n                    {channel.channelName.substr(0, 1).toUpperCase()}\r\n                  </Avatar>\r\n                  <Typography className={classes.channelText}>\r\n                    {channel.channelName}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}