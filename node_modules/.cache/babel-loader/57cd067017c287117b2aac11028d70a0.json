{"ast":null,"code":"var _jsxFileName = \"D:\\\\my react project\\\\pp\\\\Chatify\\\\src\\\\Components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { storage } from \"../Firebase/Firebase\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../Firebase/Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  displayImage: {\n    height: \"105px\",\n    width: \"180px\"\n  },\n  imageName: {\n    paddingLeft: \"15px\",\n    fontSize: \"1.3em\"\n  },\n  imageDiv: {\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n    marginTop: \"-33px\"\n  }\n}));\n\nfunction FileUpload({\n  setState,\n  file\n}) {\n  _s();\n\n  const params = useParams();\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [progress, setProgress] = useState(0);\n  const [progressBar, setProgressBar] = useState({\n    display: \"none\"\n  });\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setState();\n  };\n\n  const sendMsg = downloadURL => {\n    if (params.id) {\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n      if (userData) {\n        const displayName = userData.displayName;\n        const imgUrl = userData.photoURL;\n        const uid = userData.uid;\n        const likeCount = 0;\n        const likes = {};\n        const fireCount = 0;\n        const fire = {};\n        const heartCount = 0;\n        const heart = {};\n        const postImg = downloadURL;\n        const obj = {\n          text: message,\n          timestamp: firebase.firestore.Timestamp.now(),\n          userImg: imgUrl,\n          userName: displayName,\n          uid: uid,\n          likeCount: likeCount,\n          likes: likes,\n          fireCount: fireCount,\n          fire: fire,\n          heartCount: heartCount,\n          heart: heart,\n          postImg: postImg\n        };\n        db.collection(\"channels\").doc(params.id).collection(\"messages\").add(obj).then(res => {\n          console.log(\"message sent\");\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n\n      setMessage(\"\");\n    }\n  };\n\n  const fileObj = URL.createObjectURL(file);\n\n  const handleUpload = e => {\n    e.preventDefault();\n    setProgressBar({\n      display: \"block\"\n    });\n    const uploadRef = storage.ref(`images/${file.name}`).put(file);\n    uploadRef.on(\"state_changed\", snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      let progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      uploadRef.snapshot.ref.getDownloadURL().then(downloadURL => {\n        sendMsg(downloadURL);\n      });\n      handleClose();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fileObj,\n          alt: file.name,\n          className: classes.displayImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.imageName,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: e => {\n            handleUpload(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Add A Message\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            style: {\n              backgroundColor: \"rgb(45, 45, 73)\",\n              borderRadius: \"5px\"\n            },\n            onChange: e => {\n              setMessage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: progressBar,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              width: \"100%\",\n              mr: 1,\n              children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              minWidth: 35,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [Math.round(progress), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          style: {\n            color: \"white\"\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: e => handleUpload(e),\n          color: \"primary\",\n          autoFocus: true,\n          variant: \"contained\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileUpload, \"gfXBzyeWlxOWMK5Avn6Br8gzei8=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["D:/my react project/pp/Chatify/src/Components/FileUpload.js"],"names":["React","useState","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","LinearProgress","Typography","Box","storage","useParams","firebase","db","useStyles","theme","displayImage","height","width","imageName","paddingLeft","fontSize","imageDiv","marginLeft","marginRight","marginTop","FileUpload","setState","file","params","classes","open","setOpen","progress","setProgress","progressBar","setProgressBar","display","message","setMessage","handleClose","sendMsg","downloadURL","id","userData","JSON","parse","localStorage","getItem","displayName","imgUrl","photoURL","uid","likeCount","likes","fireCount","fire","heartCount","heart","postImg","obj","text","timestamp","firestore","Timestamp","now","userImg","userName","collection","doc","add","then","res","console","log","catch","err","fileObj","URL","createObjectURL","handleUpload","e","preventDefault","uploadRef","ref","name","put","on","snapshot","bytesTransferred","totalBytes","error","getDownloadURL","backgroundColor","borderRadius","target","value","Math","round","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { storage } from \"../Firebase/Firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport { db } from \"../Firebase/Firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  displayImage: {\r\n    height: \"105px\",\r\n    width: \"180px\",\r\n  },\r\n  imageName: {\r\n    paddingLeft: \"15px\",\r\n    fontSize: \"1.3em\",\r\n  },\r\n  imageDiv: {\r\n    marginLeft: \"16px\",\r\n    marginRight: \"16px\",\r\n    marginTop: \"-33px\",\r\n  },\r\n}));\r\n\r\nfunction FileUpload({ setState, file }) {\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n  const [progressBar, setProgressBar] = useState({ display: \"none\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState();\r\n  };\r\n\r\n  const sendMsg = (downloadURL) => {\r\n    if (params.id) {\r\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n      if (userData) {\r\n        const displayName = userData.displayName;\r\n        const imgUrl = userData.photoURL;\r\n        const uid = userData.uid;\r\n        const likeCount = 0;\r\n        const likes = {};\r\n        const fireCount = 0;\r\n        const fire = {};\r\n        const heartCount = 0;\r\n        const heart = {};\r\n        const postImg = downloadURL;\r\n        const obj = {\r\n          text: message,\r\n          timestamp: firebase.firestore.Timestamp.now(),\r\n          userImg: imgUrl,\r\n          userName: displayName,\r\n          uid: uid,\r\n          likeCount: likeCount,\r\n          likes: likes,\r\n          fireCount: fireCount,\r\n          fire: fire,\r\n          heartCount: heartCount,\r\n          heart: heart,\r\n          postImg: postImg,\r\n        };\r\n\r\n        db.collection(\"channels\")\r\n          .doc(params.id)\r\n          .collection(\"messages\")\r\n          .add(obj)\r\n          .then((res) => {\r\n            console.log(\"message sent\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const fileObj = URL.createObjectURL(file);\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n    setProgressBar({ display: \"block\" });\r\n    const uploadRef = storage.ref(`images/${file.name}`).put(file);\r\n    uploadRef.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Observe state change events such as progress, pause, and resume\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // Handle successful uploads on complete\r\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n        uploadRef.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          sendMsg(downloadURL);\r\n        });\r\n        handleClose();\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <div className={classes.imageDiv}>\r\n          <img src={fileObj} alt={file.name} className={classes.displayImage} />\r\n          <Typography className={classes.imageName}>{file.name}</Typography>\r\n        </div>\r\n\r\n        <DialogTitle id=\"alert-dialog-title\">Upload Image</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(e) => {\r\n              handleUpload(e);\r\n            }}\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Add A Message\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundColor: \"rgb(45, 45, 73)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n            />\r\n          </form>\r\n\r\n          <div style={progressBar}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" value={progress} />\r\n              </Box>\r\n              <Box minWidth={35}>\r\n                <Typography variant=\"body2\">{Math.round(progress)}%</Typography>\r\n              </Box>\r\n            </Box>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} style={{ color: \"white\" }}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={(e) => handleUpload(e)}\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n          >\r\n            Upload\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}