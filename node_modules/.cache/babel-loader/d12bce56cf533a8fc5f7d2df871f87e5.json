{"ast":null,"code":"var _jsxFileName = \"D:\\\\my react project\\\\pp\\\\Chatify\\\\src\\\\Components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Messages from \"./Messages\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useParams } from \"react-router-dom\";\nimport { db } from \"../Firebase/Firebase\";\nimport firebase from \"firebase/app\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { BiHash } from \"react-icons/bi\";\nimport { FiSend } from \"react-icons/fi\";\nimport { GrEmoji } from \"react-icons/gr\";\nimport { Picker } from \"emoji-mart\";\nimport { RiImageAddLine } from \"react-icons/ri\";\nimport FileUpload from \"./FileUpload\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  chat: {\n    position: \"relative\",\n    height: \"calc(100vh - 200px)\",\n    paddingLeft: \"10px\",\n    paddingBottom: \"5px\",\n    paddingTop: \"5px\"\n  },\n  footer: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    paddingTop: \"10px\"\n  },\n  message: {\n    width: \"100%\",\n    color: \"white\"\n  },\n  roomName: {\n    border: \"1px solid #0000004a\",\n    borderLeft: 0,\n    borderRight: 0,\n    padding: \"15px\",\n    display: \"flex\",\n    color: \"#e5e5e5\"\n  },\n  roomNameText: {\n    marginBlockEnd: 0,\n    marginBlockStart: 0,\n    paddingLeft: \"5px\"\n  },\n  iconDesign: {\n    fontSize: \"1.5em\",\n    color: \"#e5e5e5\"\n  },\n  footerContent: {\n    display: \"flex\",\n    backgroundColor: \"#303753\",\n    borderRadius: \"5px\",\n    alignItems: \"center\"\n  },\n  inputFile: {\n    display: \"none\"\n  }\n}));\n\nfunction Chat() {\n  _s();\n\n  const classes = useStyles();\n  const params = useParams();\n  const [allMessages, setAllMessages] = useState([]);\n  const [channelName, setChannelName] = useState(\"\");\n  const [userNewMsg, setUserNewMsg] = useState(\"\");\n  const [emojiBtn, setEmojiBtn] = useState(false);\n  const [modalState, setModalState] = useState(false);\n  const [file, setFileName] = useState(null);\n  useEffect(() => {\n    if (params.id) {\n      db.collection(\"channels\").doc(params.id).onSnapshot(snapshot => {\n        var _snapshot$data;\n\n        setChannelName((_snapshot$data = snapshot.data()) === null || _snapshot$data === void 0 ? void 0 : _snapshot$data.channelName);\n      });\n      db.collection(\"channels\").doc(params.id).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n        setAllMessages(snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n        })));\n      });\n    }\n  }, [params]);\n\n  const sendMsg = e => {\n    e.preventDefault();\n\n    if (userNewMsg && params.id) {\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n      if (userData) {\n        const displayName = userData.displayName;\n        const imgUrl = userData.photoURL;\n        const uid = userData.uid;\n        const likeCount = 0;\n        const likes = {};\n        const fireCount = 0;\n        const fire = {};\n        const heartCount = 0;\n        const heart = {};\n        const postImg = null;\n        const obj = {\n          text: userNewMsg,\n          timestamp: firebase.firestore.Timestamp.now(),\n          userImg: imgUrl,\n          userName: displayName,\n          uid: uid,\n          likeCount: likeCount,\n          likes: likes,\n          fireCount: fireCount,\n          fire: fire,\n          heartCount: heartCount,\n          heart: heart,\n          postImg: postImg\n        };\n        db.collection(\"channels\").doc(params.id).collection(\"messages\").add(obj).then(res => {\n          console.log(\"message sent\");\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n\n      setUserNewMsg(\"\");\n      setEmojiBtn(false);\n    }\n  };\n\n  const addEmoji = e => {\n    setUserNewMsg(userNewMsg + e.native);\n  };\n\n  const openModal = () => {\n    setModalState(!modalState);\n  };\n\n  const handelFileUpload = e => {\n    e.preventDefault();\n\n    if (e.target.files[0]) {\n      setFileName(e.target.files[0]);\n      openModal();\n    }\n\n    e.target.value = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [modalState ? /*#__PURE__*/_jsxDEV(FileUpload, {\n      setState: openModal,\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.roomName,\n      children: [/*#__PURE__*/_jsxDEV(BiHash, {\n        className: classes.iconDesign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.roomNameText,\n        children: channelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.chat,\n      children: /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n        children: allMessages.map(message => /*#__PURE__*/_jsxDEV(Messages, {\n          values: message.data,\n          msgId: message.id\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.footer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.footerContent,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: classes.inputFile,\n          id: \"icon-button-file\",\n          type: \"file\",\n          onChange: e => handelFileUpload(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"upload picture\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(RiImageAddLine, {\n              style: {\n                color: \"#b9bbbe\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          component: \"button\",\n          onClick: () => setEmojiBtn(!emojiBtn),\n          children: /*#__PURE__*/_jsxDEV(GrEmoji, {\n            style: {\n              color: \"#b9bbbe\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), emojiBtn ? /*#__PURE__*/_jsxDEV(Picker, {\n          onSelect: addEmoji,\n          theme: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 23\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          style: {\n            width: \"100%\",\n            display: \"flex\"\n          },\n          onSubmit: e => sendMsg(e),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.message,\n            required: true,\n            id: \"outlined-basic\",\n            label: \"Enter Message\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 1,\n            rowsMax: 2,\n            value: userNewMsg,\n            onChange: e => {\n              setUserNewMsg(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            type: \"submit\",\n            component: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FiSend, {\n              style: {\n                color: \"#b9bbbe\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"UX0c4U/WzKqxzz2GEzA0G7G+8lE=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/my react project/pp/Chatify/src/Components/Chat.js"],"names":["React","useEffect","useState","TextField","makeStyles","Grid","Messages","IconButton","useParams","db","firebase","ScrollableFeed","BiHash","FiSend","GrEmoji","Picker","RiImageAddLine","FileUpload","useStyles","theme","root","flexGrow","chat","position","height","paddingLeft","paddingBottom","paddingTop","footer","paddingRight","message","width","color","roomName","border","borderLeft","borderRight","padding","display","roomNameText","marginBlockEnd","marginBlockStart","iconDesign","fontSize","footerContent","backgroundColor","borderRadius","alignItems","inputFile","Chat","classes","params","allMessages","setAllMessages","channelName","setChannelName","userNewMsg","setUserNewMsg","emojiBtn","setEmojiBtn","modalState","setModalState","file","setFileName","id","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","sendMsg","e","preventDefault","userData","JSON","parse","localStorage","getItem","displayName","imgUrl","photoURL","uid","likeCount","likes","fireCount","fire","heartCount","heart","postImg","obj","text","timestamp","firestore","Timestamp","now","userImg","userName","add","then","res","console","log","catch","err","addEmoji","native","openModal","handelFileUpload","target","files","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Messages from \"./Messages\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"../Firebase/Firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport { BiHash } from \"react-icons/bi\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { GrEmoji } from \"react-icons/gr\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport { RiImageAddLine } from \"react-icons/ri\";\r\nimport FileUpload from \"./FileUpload\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  chat: {\r\n    position: \"relative\",\r\n    height: \"calc(100vh - 200px)\",\r\n    paddingLeft: \"10px\",\r\n    paddingBottom: \"5px\",\r\n    paddingTop: \"5px\",\r\n  },\r\n  footer: {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  message: {\r\n    width: \"100%\",\r\n    color: \"white\",\r\n  },\r\n  roomName: {\r\n    border: \"1px solid #0000004a\",\r\n    borderLeft: 0,\r\n    borderRight: 0,\r\n    padding: \"15px\",\r\n    display: \"flex\",\r\n    color: \"#e5e5e5\",\r\n  },\r\n  roomNameText: {\r\n    marginBlockEnd: 0,\r\n    marginBlockStart: 0,\r\n    paddingLeft: \"5px\",\r\n  },\r\n  iconDesign: {\r\n    fontSize: \"1.5em\",\r\n    color: \"#e5e5e5\",\r\n  },\r\n  footerContent: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#303753\",\r\n    borderRadius: \"5px\",\r\n    alignItems: \"center\",\r\n  },\r\n  inputFile: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction Chat() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [allMessages, setAllMessages] = useState([]);\r\n  const [channelName, setChannelName] = useState(\"\");\r\n  const [userNewMsg, setUserNewMsg] = useState(\"\");\r\n  const [emojiBtn, setEmojiBtn] = useState(false);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [file, setFileName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      db.collection(\"channels\")\r\n        .doc(params.id)\r\n        .onSnapshot((snapshot) => {\r\n          setChannelName(snapshot.data()?.channelName);\r\n        });\r\n\r\n      db.collection(\"channels\")\r\n        .doc(params.id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          setAllMessages(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() }))\r\n          );\r\n        });\r\n    }\r\n  }, [params]);\r\n\r\n  const sendMsg = (e) => {\r\n    e.preventDefault();\r\n    if (userNewMsg && params.id) {\r\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n      if (userData) {\r\n        const displayName = userData.displayName;\r\n        const imgUrl = userData.photoURL;\r\n        const uid = userData.uid;\r\n        const likeCount = 0;\r\n        const likes = {};\r\n        const fireCount = 0;\r\n        const fire = {};\r\n        const heartCount = 0;\r\n        const heart = {};\r\n        const postImg = null;\r\n        const obj = {\r\n          text: userNewMsg,\r\n          timestamp: firebase.firestore.Timestamp.now(),\r\n          userImg: imgUrl,\r\n          userName: displayName,\r\n          uid: uid,\r\n          likeCount: likeCount,\r\n          likes: likes,\r\n          fireCount: fireCount,\r\n          fire: fire,\r\n          heartCount: heartCount,\r\n          heart: heart,\r\n          postImg: postImg,\r\n        };\r\n\r\n        db.collection(\"channels\")\r\n          .doc(params.id)\r\n          .collection(\"messages\")\r\n          .add(obj)\r\n          .then((res) => {\r\n            console.log(\"message sent\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n\r\n      setUserNewMsg(\"\");\r\n      setEmojiBtn(false);\r\n    }\r\n  };\r\n\r\n  const addEmoji = (e) => {\r\n    setUserNewMsg(userNewMsg + e.native);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setModalState(!modalState);\r\n  };\r\n\r\n  const handelFileUpload = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files[0]) {\r\n      setFileName(e.target.files[0]);\r\n      openModal();\r\n    }\r\n    e.target.value = null;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {modalState ? <FileUpload setState={openModal} file={file} /> : null}\r\n      <Grid item xs={12} className={classes.roomName}>\r\n        <BiHash className={classes.iconDesign} />\r\n        <h3 className={classes.roomNameText}>{channelName}</h3>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.chat}>\r\n        <ScrollableFeed>\r\n          {allMessages.map((message) => (\r\n            <Messages\r\n              key={message.id}\r\n              values={message.data}\r\n              msgId={message.id}\r\n            />\r\n          ))}\r\n        </ScrollableFeed>\r\n      </Grid>\r\n      <div className={classes.footer}>\r\n        <Grid item xs={12} className={classes.footerContent}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.inputFile}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={(e) => handelFileUpload(e)}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <RiImageAddLine style={{ color: \"#b9bbbe\" }} />\r\n            </IconButton>\r\n          </label>\r\n\r\n          <IconButton\r\n            color=\"primary\"\r\n            component=\"button\"\r\n            onClick={() => setEmojiBtn(!emojiBtn)}\r\n          >\r\n            <GrEmoji style={{ color: \"#b9bbbe\" }} />\r\n          </IconButton>\r\n          {emojiBtn ? <Picker onSelect={addEmoji} theme=\"dark\" /> : null}\r\n\r\n          <form\r\n            autoComplete=\"off\"\r\n            style={{ width: \"100%\", display: \"flex\" }}\r\n            onSubmit={(e) => sendMsg(e)}\r\n          >\r\n            <TextField\r\n              className={classes.message}\r\n              required\r\n              id=\"outlined-basic\"\r\n              label=\"Enter Message\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={1}\r\n              rowsMax={2}\r\n              value={userNewMsg}\r\n              onChange={(e) => {\r\n                setUserNewMsg(e.target.value);\r\n              }}\r\n            />\r\n            <IconButton type=\"submit\" component=\"button\">\r\n              <FiSend style={{ color: \"#b9bbbe\" }} />\r\n            </IconButton>\r\n          </form>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}